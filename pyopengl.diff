diff --git a/OpenGL/GLUT/special.py b/OpenGL/GLUT/special.py
index da3930e..100c55a 100644
--- a/OpenGL/GLUT/special.py
+++ b/OpenGL/GLUT/special.py
@@ -70,7 +70,7 @@ if __glutInitWithExit:
         This is the Win32-specific version that handles
         registration of an exit-function handler 
         """
-        return __glutCreateWindowWithExit(title, _exitfunc)
+        return __glutCreateWindowWithExit(as_8_bit(title), _exitfunc)
     def glutCreateMenu(callback):
         """Create menu with given callback 
         
diff --git a/OpenGL/__init__.py b/OpenGL/__init__.py
index 959186c..6f7a653 100644
--- a/OpenGL/__init__.py
+++ b/OpenGL/__init__.py
@@ -348,7 +348,7 @@ FormatHandler(
         "numpy.float16",
         "numpy.float32",
         "numpy.float64",
-        "numpy.float128",
+        # "numpy.float128",
     ],
     isOutput=True,
 )
diff --git a/OpenGL/platform/win32.py b/OpenGL/platform/win32.py
index 619e6c8..26b8054 100644
--- a/OpenGL/platform/win32.py
+++ b/OpenGL/platform/win32.py
@@ -4,14 +4,14 @@ import platform
 from OpenGL.platform import ctypesloader, baseplatform
 import sys
 
-if sys.hexversion < 0x2070000:
-    vc = 'vc7'
-elif sys.hexversion >= 0x3050000:
-    vc = 'vc14'
-elif sys.hexversion >= 0x3030000:
-    vc = 'vc10'
-else:
-    vc = 'vc9'
+# if sys.hexversion < 0x2070000:
+#     vc = 'vc7'
+# elif sys.hexversion >= 0x3050000:
+#     vc = 'vc14'
+# elif sys.hexversion >= 0x3030000:
+#     vc = 'vc10'
+# else:
+#     vc = 'vc9'
 
 def _size():
     return platform.architecture()[0].strip( 'bits' )
@@ -39,7 +39,7 @@ class Win32Platform( baseplatform.BasePlatform ):
             return None
     @baseplatform.lazy_property
     def GLUT( self ):
-        for possible in ('freeglut%s.%s'%(size,vc,), 'glut%s.%s'%(size,vc,)):
+        for possible in ('freeglut', 'freeglut%s'%(size,), 'glut%s'%(size,)):
             # Prefer FreeGLUT if the user has installed it, fallback to the included 
             # GLUT if it is installed
             try:
@@ -51,7 +51,7 @@ class Win32Platform( baseplatform.BasePlatform ):
         return None
     @baseplatform.lazy_property
     def GLE( self ):
-        for libName in ('gle%s.%s'%(size,vc,), 'opengle%s.%s'%(size,vc,)):
+        for libName in ('gle32', 'gle%s'%(size,), 'opengle%s'%(size,)):
             try:
                 GLE = ctypesloader.loadLibrary( ctypes.cdll, libName )
                 GLE.FunctionType = ctypes.CFUNCTYPE
diff --git a/setup.py b/setup.py
index eab7150..387b270 100644
--- a/setup.py
+++ b/setup.py
@@ -29,5 +29,6 @@ if __name__ == "__main__":
             },
         },
         data_files=datafiles,
+        libraries=[('',{'sources':[]})],
         include_package_data=True,
     )
